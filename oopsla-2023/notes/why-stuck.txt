
;; TODO
;; X boundary fails vs no-internal
;;   ==> profile usually makes progress 2/3 cases
;; - TODO split total / self
;; - outside world, what happens in boundary: nothing in profile, 1-internal, 0-internal
;; - why con-prf / cost-con stuck? check profiles
;; - ... change hopeless def, 2 std dev or something CI christos will check

;; summary of ad-hoc failure reasons
;;
;;
;; Comments:
;; - **beware** an error is not necessarily a failure b/c the 1-stddev wiggle room!
;;
;; - 100% typed includes deep/shallow mixes, there's a whole lattice there
;;   ==> toggling may help!
;;
;; - boundary fails @ no-internal-mods
;;   - (hopeless  . 127180)
;;   - (prf_ok    . 264075)
;;   - (prf_notok .   3761)
;;
;; - no-nondeep ==> profiler needs 2 items, but boundary gets 2 by default
;;   ... unlikely, but possible
;;
;; - no-actionable ==> much more common for prf than bnd

;; ---

(((error no-actionable)
  "catch-all: no candidates, upgrade failed, upgrade same as current, ...."
  "745753 scenarios
   9892 below 50%
   727262 above 50%"
   #hash((1/10 . 30) (1/9 . 20) (1/8 . 40) (1/7 . 10) (1/6 . 40) (1/5 . 312) (2/9 . 60) (1/4 . 258) (2/7 . 60) (3/10 . 969) (1/3 . 912) (3/8 . 1052) (2/5 . 3276) (3/7 . 303) (4/9 . 2550) (1/2 . 8599) (5/9 . 10090) (4/7 . 1100) (3/5 . 10197) (5/8 . 7527) (2/3 . 34234) (7/10 . 34741) (5/7 . 2909) (3/4 . 18051) (7/9 . 68460) (4/5 . 134029) (5/6 . 1586) (6/7 . 3675) (7/8 . 27952) (8/9 . 71688) (9/10 . 168243) (1 . 132780))
  (("con-boundary" . 39)
   ("con-prf_self" . 114473)
   ("con-prf_total" . 114195)
   ("cost-con-boundary" . 41)
   ("cost-con-prf_self" . 114473)
   ("cost-con-prf_total" . 114195)
   ("cost-opt-prf_self" . 47714)
   ("cost-opt-prf_total" . 47384)
   ("limit-con-prf_self" . 49849)
   ("limit-con-prf_total" . 48292)
   ("opt-prf_self" . 47714)
   ("opt-prf_total" . 47384)))

;; Q. why con-prf / cost-con stuck here?

 ((error no-internal-mods)
  "bnd: no pairs from benchmark; prf: NA"
  "395016 scenarios
   7388 below 50%
   382551 above 50%"
  #hash((1/10 . 10) (1/9 . 40) (1/8 . 40) (1/7 . 20) (1/6 . 45) (1/5 . 70) (2/9 . 209) (1/4 . 261) (2/7 . 105) (3/10 . 58) (1/3 . 1255) (3/8 . 622) (2/5 .  797) (3/7 . 283) (4/9 . 3573) (1/2 . 5077) (5/9 . 10081) (4/7 . 738) (3/5 .  9216) (5/8 . 4235) (2/3 . 19547) (7/10 . 17925) (5/7 . 1461) (3/4 . 10777) (7/9 . 33496) (4/5 . 28178) (5/6 . 1010) (6/7 . 3417) (7/8 . 23107) (8/9 .  43077) (9/10 . 95157) (1 . 81129))
  (("con-boundary" . 114779)
   ("cost-con-boundary" . 114712)
   ("cost-opt-boundary" . 54632)
   ("limit-con-boundary" . 56248)
   ("opt-boundary" . 54645)))

 ((error no-mods)
  "bnd: NA; prf: no nodes from benchmark"
  "233 scenarios
   30 below 50%
   136 above 50%"
  #hash((1/4 . 30) (1/2 . 67) (3/4 . 92) (1 . 44))
  (("con-prf_self" . 16)
   ("con-prf_total" . 16)
   ("cost-con-prf_self" . 16)
   ("cost-con-prf_total" . 16)
   ("cost-opt-prf_self" . 29)
   ("cost-opt-prf_total" . 28)
   ("limit-con-prf_self" . 28)
   ("limit-con-prf_total" . 27)
   ("opt-prf_self" . 29)
   ("opt-prf_total" . 28)))

 ((error no-nondeep-mods)
  "bnd: NA; prf: all reported nodes are deep"
  "338925 scenarios
   136 below 50%
   338564 above 50%"
  #hash((2/5 . 22) (4/9 . 114) (1/2 . 225) (5/9 . 2484) (4/7 . 167) (3/5 . 159) (5/8 . 1517) (2/3 . 13920) (7/10 . 4748) (5/7 . 1737) (3/4 . 2415) (7/9 . 40505) (4/5 . 6882) (5/6 . 682) (6/7 . 3575) (7/8 . 18983) (8/9 . 49665) (9/10 . 97211) (1 . 93914))
  (("con-prf_self" . 419)
   ("con-prf_total" . 429)
   ("cost-con-prf_self" . 419)
   ("cost-con-prf_total" . 429)
   ("cost-opt-prf_self" . 56035)
   ("cost-opt-prf_total" . 57030)
   ("limit-con-prf_self" . 54616)
   ("limit-con-prf_total" . 56483)
   ("opt-prf_self" . 56035)
   ("opt-prf_total" . 57030)))

 ((error no-bnds)
  "randomB hit top but not at 1x, expected for black holes"
  "214656 scenarios
   ALL above 50%"
  #hash((1 . 214656))
  (("randomB-boundary" . 71528)
   ("randomB-prf_self" . 71682)
   ("randomB-prf_total" . 71446)))

 ((error timeout)
  "random, no success or end after 200 steps"
  "6 scenarios
   ALL above 50%"
  #hash((1 . 6))
  (("randomB-boundary" . 1)
   ("randomB-prf_self" . 4)
   ("randomB-prf_total" . 1))))
